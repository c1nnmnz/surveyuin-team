import{p as l}from"./index-CxZZOcZu.js";import{c as u}from"./data-management-BXwEc-vo.js";const c=[{id:"survey1",title:"Evaluasi Layanan Akademik UIN Antasari",description:"Survei ini bertujuan untuk mengukur tingkat kepuasan mahasiswa terhadap layanan akademik yang diberikan oleh UIN Antasari.",createdBy:"user3",createdAt:"2023-05-15",expiresAt:"2023-12-30",isActive:!0,targetRespondents:["student"],questions:[{id:"q1",type:"likert",text:"Bagaimana tingkat kepuasan Anda terhadap layanan administrasi akademik?",options:[{value:1,label:"Sangat Tidak Puas"},{value:2,label:"Tidak Puas"},{value:3,label:"Netral"},{value:4,label:"Puas"},{value:5,label:"Sangat Puas"}],required:!0},{id:"q2",type:"likert",text:"Bagaimana tingkat kepuasan Anda terhadap fasilitas perkuliahan?",options:[{value:1,label:"Sangat Tidak Puas"},{value:2,label:"Tidak Puas"},{value:3,label:"Netral"},{value:4,label:"Puas"},{value:5,label:"Sangat Puas"}],required:!0},{id:"q3",type:"text",text:"Apa saran Anda untuk peningkatan layanan akademik?",required:!1}]}],o=[{id:"service1",name:"Layanan Akademik Fakultas",category:"Akademik",status:"Aktif",description:"Layanan administrasi akademik di tingkat fakultas",faculty:"Fakultas Tarbiyah dan Keguruan",location:"Gedung Fakultas Lt. 1",contactPerson:"0511-3303673",operationalHours:"Senin-Jumat, 08.00-16.00 WITA",procedureSteps:["Datang ke loket layanan akademik fakultas","Mengisi formulir sesuai kebutuhan","Mengumpulkan dokumen pendukung","Menunggu proses"],requirements:["KTM (Kartu Tanda Mahasiswa)","Transkip Nilai (jika diperlukan)","Dokumen pendukung lainnya"],processingTime:"1-3 hari kerja",cost:"Gratis",qrCode:"https://uinantasari.ac.id/survey/service1",surveyAvailable:!0}],m=u(l((a,n)=>({currentServiceId:null,responses:{},allResponses:[],currentSection:0,totalSections:0,isCompleted:!1,startTime:null,completionTime:null,surveys:c,services:o,isLoading:!1,error:null,completedServices:[],feedbackSubmitted:[],resetStore:()=>{a({currentServiceId:null,responses:{},allResponses:[],currentSection:0,totalSections:0,isCompleted:!1,startTime:null,completionTime:null,isLoading:!1,error:null,completedServices:[],feedbackSubmitted:[]}),console.log("Survey store has been reset")},setCurrentService:e=>a({currentServiceId:e,responses:{},currentSection:0,isCompleted:!1,startTime:new Date().toISOString(),completionTime:null}),updateResponse:(e,r)=>a(t=>({responses:{...t.responses,[e]:r}})),setProgress:(e,r)=>a({currentSection:e,totalSections:r}),nextSection:()=>a(e=>({currentSection:Math.min(e.currentSection+1,e.totalSections)})),prevSection:()=>a(e=>({currentSection:Math.max(e.currentSection-1,0)})),completeSurvey:e=>{const r=new Date().toISOString();a(e?t=>({completedServices:[...t.completedServices,e],isCompleted:!0,completionTime:r}):{isCompleted:!0,completionTime:r}),console.log("Survey completed:",n().responses)},saveResponse:e=>{const r=`resp-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,t={...e,id:r};return a(s=>({allResponses:[...s.allResponses,t]})),console.log("Response saved:",t),r},markServiceAsCompleted:e=>{e&&(a(r=>r.completedServices.includes(e)?r:{completedServices:[...r.completedServices,e]}),a({isCompleted:!0,completionTime:new Date().toISOString()}))},getResponsesForService:e=>e?n().allResponses.filter(r=>r.serviceId===e):[],updateFeedback:(e,r)=>(a(t=>({feedbackSubmitted:[...t.feedbackSubmitted,e]})),a(t=>({allResponses:t.allResponses.map(i=>i.serviceId===e?{...i,feedback:r}:i)})),console.log("Feedback updated:",r),!0),resetSurvey:()=>a({responses:{},currentSection:0,isCompleted:!1,startTime:new Date().toISOString(),completionTime:null}),resetUserData:()=>a({currentServiceId:null,responses:{},allResponses:[],completedServices:[],feedbackSubmitted:[],currentSection:0,isCompleted:!1,startTime:null,completionTime:null}),getSurveyDuration:e=>{if(!e.startTime||!e.completionTime)return null;const r=new Date(e.startTime),s=new Date(e.completionTime)-r;return Math.round(s/(1e3*60))},getServices:async()=>{a({isLoading:!0,error:null});try{return await new Promise(e=>setTimeout(e,500)),a({services:o,isLoading:!1}),o}catch(e){return a({error:e.message,isLoading:!1}),[]}},getServiceById:e=>n().services.find(t=>t.id===e)||null,isServiceCompleted:e=>n().completedServices.includes(e),submitFeedback:async(e,r)=>{a({isLoading:!0,error:null});try{return await new Promise(t=>setTimeout(t,800)),a(t=>({feedbackSubmitted:[...t.feedbackSubmitted,e],isLoading:!1})),console.log("Feedback submitted:",r),!0}catch(t){return a({error:t.message,isLoading:!1}),!1}}}),{name:"survey-storage",partialize:a=>({responses:a.responses,allResponses:a.allResponses,completedServices:a.completedServices,feedbackSubmitted:a.feedbackSubmitted,currentServiceId:a.currentServiceId,currentSection:a.currentSection,isCompleted:a.isCompleted})}));export{m as u};
